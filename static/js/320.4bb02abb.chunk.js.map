{"version":3,"file":"static/js/320.4bb02abb.chunk.js","mappings":"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","sources":["components/layout/Footer.tsx","components/profile/ProfileMain.tsx","pages/template/ProfilePageTemplate.tsx","pages/ProfilePage.tsx","services/IpfsService.ts","services/NotificationService.ts"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface FooterProps {\r\n  className?: string\r\n}\r\n \r\nexport const Footer: React.FC<FooterProps> = ({ className }: FooterProps) => {\r\n  return (\r\n    <S.Footer className={className}>\r\n      <S.Span>Copyright @2023 CryptoTrades All Rights Reserved</S.Span>\r\n    </S.Footer>\r\n  )\r\n}\r\n\r\nconst S = {\r\n  Footer: styled.footer`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    background: ${props => props.theme.white};\r\n    position: absolute;\r\n  `,\r\n  Span: styled.span`\r\n    font-family: ${props => props.theme.fonts.primary};\r\n    font-weight: 400;\r\n    text-decoration: none;\r\n    font-size: 16px;\r\n    color: ${props => props.theme.black};\r\n    padding: 11px;\r\n  `\r\n}\r\n","import { Button, Input } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport * as FaIcons from 'react-icons/fa';\nimport { PinataIpfsImageService } from '../../services/IpfsService'\nimport { notifyWarning } from '../../services/NotificationService'\nimport { safeIpfsUrl } from '../../services/UtilService'\n\nexport default function ProfileMain() {\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  const onFileChange = async (e:any, field:string) => {\n    let isImage = true;\n    let imageObj: any = e.target.files;\n    let image: File = new File([], '');\n    for (const key of Object.keys(imageObj)) {\n      if ( /\\.(jpe?g|png|gif|bmp)$/i.test(imageObj[key].name) === false ) { isImage = false; break; }\n      image = imageObj[key];\n    }\n    if(!isImage){\n      notifyWarning('Not image format')\n      return;\n    }\n    let uploadedData = await PinataIpfsImageService().uploadImageToIpfs(image);\n    console.log(uploadedData)\n    if(uploadedData.cid === '') {\n      notifyWarning(uploadedData.error);\n      return;\n    }\n    setImageUrl(safeIpfsUrl(uploadedData.cid));\n  }\n\n  return (\n    <S.Container>\n      <S.BannerImage>\n        <img src={imageUrl} alt='' style={{width: '100%', objectFit: 'cover', height: 'auto', maxHeight: '250px'}} />\n        <S.BannerButton>\n          <FaIcons.FaRegEdit style={{width: '25px'}} />\n        </S.BannerButton>\n        <S.BannerInput type='file' name='banner' onChange={(e:any) => onFileChange(e, 'profile_cover')}/>\n      </S.BannerImage>\n      <div style={{width: '100%', textAlign: 'center', marginTop: '20px'}}>\n        <span style={{fontSize: '25px', fontWeight: 'bold'}}>{'User Name'}</span>\n      </div>\n    </S.Container>\n  )\n}\n\nconst S = {  \n  Container: styled.div `\n    background: ${(props)=>props.theme.white};\n    color: ${props=>props.theme.gray['4']};\n    margin-top: 96px;\n    padding: 20px 20px 0 20px;\n  `,\n  BannerInput: styled(Input)`\n    opacity: 0;\n    position: absolute;\n    width: 35px;\n    height: 35px;\n    top: 120px;\n    right: 25px;\n    appearance: none;\n    cursor: default;\n    align-items: baseline;\n    color: inherit;\n    text-overflow: ellipsis;\n    white-space: pre;\n    text-align: start !important;  \n    background-color: -internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59));\n    margin: 0em;\n    padding: 1px 2px;\n    border-width: 2px;\n    border-style: inset;\n    border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\n    border-image: initial;\n  `,\n  BannerButton: styled(Button)`\n    background-color: ${(props)=>props.theme.gray['1']} !important;\n    color: ${(props)=>props.theme.gray['3']};\n    border: 1px solid ${(props)=>props.theme.gray['2']};\n    border-radius: 5px;\n    box-shadow: none;\n    position: absolute;\n    width: 35px;\n    height: 35px;\n    top: 120px;\n    right: 25px;\n    padding: 0 0 0 3px;\n  `,\n  BannerImage: styled.div`\n    width: 100%;\n    height: 250px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: ${props=>props.theme.gray['1']};\n    border-radius: 20px;\n  `\n}\n","import React, { ReactNode, useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport ProfileMain from '../../components/profile/ProfileMain';\nimport { Footer } from '../../components/layout/Footer'\nimport { Header } from '../../components/layout/Header'\n\nexport type ProfileTemplatePageProps = {\n  children: ReactNode\n}\n\nexport function ProfilePageTemplate({ children }: ProfileTemplatePageProps) {\n\n  return (\n    <> \n      <Header />\n      <S.Main>\n        <ProfileMain />\n      </S.Main>   \n      <S.Contents> \n        {children}\n      </S.Contents>\n      <Footer />\n    </>\n  )\n}\n\nexport const S = {\n  Main: styled.div `\n    background: #F6F6F6;\n  `,\n  Contents: styled.div `\n    padding: 3px 24px;\n    background: ${props => props.theme.white};\n    display: block;\n    align-items: center;\n  `\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ProfilePageTemplate } from './template/ProfilePageTemplate'\n// import { validate, emailValidate, confirmValidate } from '../services/ValidationService';\nimport { Button, Col, Row, Input, InputRef  } from 'antd'\nimport { colors, viewport, viewportV2 } from '../styles/variables'\n\nexport default function ProfilePage() {\n  // const {user, setUser} = useContext(AppContext);\n  const [username, setUsername] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n  const [phone, setPhone] = useState<string>('')\n  const [website_url, setWebsiteUrl] = useState<string>('')\n  const [twitter_info, setTwitterInfo] = useState<string>('')\n  const [telegram_info, setTelegramInfo] = useState<string>('')\n\n  const buttonElement:any = React.useRef<HTMLElement>(null);\n  const emailElement:any = React.useRef<InputRef>(null);\n  const phoneElement:any = React.useRef<InputRef>(null);\n  const webElement:any = React.useRef<InputRef>(null);\n  const twitterElement:any = React.useRef<InputRef>(null);\n  const telegramElement:any = React.useRef<InputRef>(null);\n\n\n  const handleKeyPress = (e: any, target: string) => {\n    if(e.key === 'Enter'){\n      switch(target) {\n        case 'update':\n          if(buttonElement.current)\n            buttonElement.current.focus();\n          break;\n        case 'email':\n          if(emailElement.current)\n            emailElement.current.focus();\n          break;\n        case 'phone':\n          if(phoneElement.current)\n            phoneElement.current.focus();\n          break;\n        case 'web':\n          if(webElement.current)\n            webElement.current.focus();\n          break;\n        case 'twitter':\n          if(twitterElement.current)\n            twitterElement.current.focus();\n          break;\n        case 'telegram':\n          if(telegramElement.current)\n            telegramElement.current.focus();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  const handleSubmit = async () => {\n    // if(!validate('Username', username)) return;\n\n    // let data = {username: username, email: email, phone: phone, website_url: website_url, twitter_info: twitter_info, telegram_info: telegram_info};\n    // const userdata = await updateProfile(data);\n    // if(userdata != {}){    \n    //   setUser({\n    //     authenticated: true,\n    //     username: userdata['username'], \n    //     email: userdata['email'],\n    //     exp: userdata['exp'],\n    //     website_url: userdata['website_url'],\n    //     twitter_info: userdata['twitter_info'],\n    //     telegram_info: userdata['telegram_info'],\n    //     account: userdata['account'],\n    //     phone: userdata['phone'],\n    //     profile_cover: userdata['profile_cover'],\n    //     profile_image: userdata['profile_image'],\n    //     role: userdata['role'],\n    //     status: userdata['status']\n    //   })\n    // }\n  }\n\n  return (\n    <ProfilePageTemplate> \n      <S.Row>\n        <header>Edit Profiles</header>\n        <div style={{width: '100%', padding: '7px', borderRadius: '5px', cursor: 'pointer'}}>\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <S.InputDiv>\n                User Name\n                <S.Input maxLength={60} value={username} placeholder=\"Enter Username\" onChange={(event:any) => setUsername(event.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'email')} />\n              </S.InputDiv>\n              <S.InputDiv>\n                Email\n                <S.Input maxLength={60} value={email} placeholder=\"Enter Email\" onChange={(event:any) => setEmail(event.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'phone')} ref={emailElement}/>\n              </S.InputDiv>\n              <S.InputDiv>\n                Phone Number\n                <S.Input maxLength={60} value={phone} placeholder=\"Enter Phone Number\" onChange={(event:any) => setPhone(event.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'web')} ref={phoneElement} />\n              </S.InputDiv>\n              <S.InputDiv>\n                Website Url\n                <S.Input maxLength={60} value={website_url} placeholder=\"Enter Website Url\" onChange={(event:any) => setWebsiteUrl(event.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'twitter')} ref={webElement} />\n              </S.InputDiv>\n              <S.InputDiv>\n                Twitter\n                <S.Input maxLength={60} value={twitter_info} placeholder=\"Enter Twitter Info\" onChange={(event:any) => setTwitterInfo(event.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'telegram')} ref={twitterElement} />\n              </S.InputDiv>\n              <S.InputDiv>\n                Telegram\n                <S.Input maxLength={60} value={telegram_info} placeholder=\"Enter Telegram Info\" onChange={(event:any) => setTelegramInfo(event.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'update')} ref={telegramElement} />\n              </S.InputDiv>\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <S.InputDiv>\n                Description\n                <S.TextArea rows = {18}>\n                  dfsfaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadeeeeeeeeeeeeea\n                </S.TextArea>\n              </S.InputDiv>\n            </Col>\n          </Row>\n          <Row justify='center'>\n            <S.ButtonDiv>\n              <S.Button onClick={handleSubmit} ref={buttonElement}>\n                Update Profile\n              </S.Button>\n            </S.ButtonDiv>\n          </Row>\n        </div>\n      </S.Row>    \n    </ProfilePageTemplate>\n  )\n}\n\nexport const S = {\n  ButtonDiv: styled.div `\n    width: 100%;\n    display: inline-block;\n    text-align: left;\n    margin-top: 20px;\n    @media (min-width: ${props => props.theme.viewport.desktop}) {\n      margin-top: 0px;\n      width: 50%;\n      display: inline-block;\n      text-align: center;\n    }\n  `,\n  Span: styled.span `\n    color: ${props=>props.theme.gray['2']};\n    font-size: 12px;\n    margin-left: 10px;\n  `,\n  InputDiv: styled.div `\n    padding: 10px 20px 10px 20px;\n  `,\n  Input: styled(Input) `\n    display: block;\n    width: 100%;\n    height: calc(1.5em + 0.75rem + 2px);\n    padding: 0.375rem 0.75rem;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${props=>props.theme.gray['4']};\n    background-color: ${props=>props.theme.gray['0']};\n    background-clip: padding-box;\n    border: 1px solid ${props=>props.theme.gray['1']};\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  `,\n  TextArea: styled(Input.TextArea) `\n    display: block;\n    width: 100%;\n    resize: vertical;\n    max-height: 405px;\n    padding: 0.375rem 0.75rem;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 15;\n    color: ${props=>props.theme.gray['4']};\n    background-color: ${props=>props.theme.gray['0']};\n    background-clip: padding-box;\n    border: 1px solid ${props=>props.theme.gray['1']};\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  `,\n  Button: styled(Button)`\n    display: inline-block !important;\n    margin-left: 20px !important;\n    margin-bottom: 20px;\n    background-color: rgb(34, 106, 237);\n    color: ${colors.white};\n    border-radius: 5px !important;\n    padding: 3px 15px 5px 15px !important;\n    cursor: pointer !important;\n    border: 1px solid rgb(34, 106, 237);\n\n    &:hover,\n    &:active,\n    &:focus {\n      background-color: rgb(34, 106, 237);\n      border: 1px solid rgb(34, 106, 237);\n      color: ${colors.white};\n    }\n  `,  \n  Row: styled(Row)`\n    display: flex;\n    flex-wrap: wrap;\n    border-radius: 5px;\n    color: ${props=>props.theme.gray['4']};\n    border: 1px solid ${props=>props.theme.gray['1']};\n\n    header {\n      width: 100%;\n      height: 60px;\n      padding: 1rem 1.25rem;\n      margin-bottom: 0;\n      background-color: ${props=>props.theme.gray['0']};\n      border-bottom: 1px solid ${props=>props.theme.gray['1']};\n    }\n\n    @media (min-width: ${props => props.theme.viewport.tablet}) {\n      margin-top: 2rem;\n      margin-bottom: 4.5rem;\n    }\n\n    @media (min-width: ${props => props.theme.viewport.desktop}) {\n      margin-top: 2rem;\n      margin-bottom: 2.3rem;\n    }\n    @media (min-width: ${props => props.theme.viewport.desktopl}) {\n      margin-top: 0px;\n      margin-bottom: 2.3rem;\n    }\n    @media (min-width: ${props => props.theme.viewport.desktopXl}) {\n      margin-bottom: 2.3rem;\n    }\n  `\n}\n","import { Erc721Attribute, Erc721Properties } from '../types/UtilTypes'\nimport { create } from 'ipfs-http-client'\n\ninterface Erc721Metadata {\n  name: string\n  author: string\n  image?: string\n  animation_url?: string\n  alt?: string\n  sensitive_content: string\n  description?: string\n  social_media?: string\n  attributes?: Erc721Attribute[]\n  properties: Erc721Properties\n}\n\nexport interface IpfsFileResponse {\n  cid: string\n  error: string\n}\n\ninterface IpfsNFTService {\n  uploadNFTToIpfs(data: Erc721Metadata, image?: File, video?: File, audio?: File): Promise<IpfsFileResponse>\n}\n\ninterface IpfsImageService {\n  uploadImageToIpfs(image: File): Promise<IpfsFileResponse>\n}\n\nexport const PinataIpfsNFTService = (): IpfsNFTService => {\n  const ipfs = create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n  return {\n    async uploadNFTToIpfs(data, image, video, audio): Promise<IpfsFileResponse> {   \n      \n      try {\n        // let w_imageIpfs = await ipfs.add(image);\n        // data.image = w_imageIpfs['path'];\n        // const nftMetadataFile = JSON.stringify(data);\n        // const _cid = await ipfs.add(nftMetadataFile);\n\n        return {\n          cid: 'QmSppX72tE98tQ7xUEbeNqehDhVqZ67u2AEKnsUkJEWpBb',//_cid['path']\n          error: ''\n        }\n      } catch(e) {\n        return { cid: '', error: 'upload failed' };\n      }\n    }\n  }\n}\n\nexport const PinataIpfsImageService = (): IpfsImageService => {\n  const ipfs = create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n  return {\n    async uploadImageToIpfs(image): Promise<IpfsFileResponse> {   \n      \n      try {\n        let _cid = await ipfs.add(image);\n        return {\n          cid: _cid['path'],\n          error: ''\n        }\n      } catch(e) {\n        return { cid: '', error: 'upload failed' };\n      }\n    }\n  }\n}\n","import { message } from 'antd'\n\nexport const notifySuccess = (text: string) => {\n  message.success(text)\n}\nexport const notifyWarning = (text: string) => {\n  message.warning(text)\n}\nexport const notifyError = (text: string, err?: Error) => {\n  message.error(text)\n  if (err) {\n    // eslint-disable-next-line no-console\n    console.error(err)\n  }\n}\n"],"names":["Footer","className","S","Span","styled","props","theme","white","fonts","primary","black","ProfileMain","useState","imageUrl","setImageUrl","onFileChange","e","field","isImage","imageObj","target","files","image","File","Object","keys","key","test","name","notifyWarning","PinataIpfsImageService","uploadImageToIpfs","uploadedData","console","log","cid","error","safeIpfsUrl","Container","BannerImage","src","alt","style","width","objectFit","height","maxHeight","BannerButton","BannerInput","type","onChange","textAlign","marginTop","fontSize","fontWeight","gray","Input","Button","ProfilePageTemplate","children","Header","Main","Contents","ProfilePage","username","setUsername","email","setEmail","phone","setPhone","website_url","setWebsiteUrl","twitter_info","setTwitterInfo","telegram_info","setTelegramInfo","buttonElement","React","emailElement","phoneElement","webElement","twitterElement","telegramElement","handleKeyPress","current","focus","handleSubmit","Row","padding","borderRadius","cursor","xs","sm","md","lg","xl","InputDiv","maxLength","value","placeholder","event","onKeyPress","ref","TextArea","rows","justify","ButtonDiv","onClick","viewport","desktop","colors","tablet","desktopl","desktopXl","PinataIpfsNFTService","create","host","port","protocol","uploadNFTToIpfs","data","video","audio","ipfs","add","_cid","notifySuccess","text","message","notifyError","err"],"sourceRoot":""}