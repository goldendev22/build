{"version":3,"file":"static/js/623.8adeef1f.chunk.js","mappings":"+LAOaA,EAAgC,SAAH,GAAoC,IAA9BC,EAAS,EAATA,UAC9C,OACE,SAACC,EAAEF,OAAM,CAACC,UAAWA,EAAU,UAC7B,SAACC,EAAEC,KAAI,UAAC,sDAGd,EAEMD,EAAI,CACRF,OAAQI,EAAAA,GAAAA,OAAa,qKAKL,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAK,IAG1CJ,KAAMC,EAAAA,GAAAA,KAAW,+JACA,SAAAC,GAAK,OAAIA,EAAMC,MAAME,MAAMC,OAAO,IAIxC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,KAAK,I,sQC3B1BC,EAAW,SAACC,EAAeC,GACpC,IAAIC,GAAW,EAKf,YAJYC,GAATF,GAA+B,IAATA,KACrBG,EAAAA,EAAAA,IAAcJ,EAAQ,gBACtBE,GAAW,GAERA,CACX,E,oECoBe,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiC,YAArB,GACbC,EAAYD,EAAaE,IAAI,QAC7BC,EAAoBH,EAAaE,IAAI,gBACrCE,GAAUC,EAAAA,EAAAA,GAAeC,EAAAA,IACzBC,GAAUF,EAAAA,EAAAA,GAAeG,EAAAA,IAC/B,GAAsCC,EAAAA,EAAAA,YAAkB,eAAjDC,EAAW,KAAEC,EAAc,KAClC,GAAwBF,EAAAA,EAAAA,UAAiB,IAAG,eAArCG,EAAI,KAAEC,EAAO,KACpB,GAAwBJ,EAAAA,EAAAA,UAAiB,IAAG,eAArCK,EAAI,KAAEC,EAAO,KACpB,GAA4BN,EAAAA,EAAAA,UAAiB,IAAG,eAAzCO,EAAM,KAAEC,EAAS,KACxB,GAAgCR,EAAAA,EAAAA,WAAkB,GAAK,eAAhDS,EAAQ,KAAEC,EAAW,KAC5B,GAAoCV,EAAAA,EAAAA,WAAkB,GAAK,eAApDW,EAAU,KAAEC,EAAa,KAChC,GAAoCZ,EAAAA,EAAAA,UAAiB,QAAO,eAArDa,EAAU,KAAEC,EAAa,KAChC,IAAwCd,EAAAA,EAAAA,UAAiB,QAAO,iBAAzDe,GAAY,MAAEC,GAAe,MACpC,IAAkChB,EAAAA,EAAAA,WAAkB,GAAM,iBAAnDiB,GAAS,MAAEC,GAAY,OAE9BC,EAAAA,EAAAA,YAAU,WACG,UAAR3B,GAAkB4B,IACvB,GAAG,CAAC5B,IAEJ,IAAM4B,GAAS,yCAAG,2FACc,OAA1BC,EAAO,CAACC,IAAK5B,GAAc,EAAD,QACN6B,EAAAA,EAAAA,IAAkBF,EAAM1B,GAAS,KAAD,GAApD6B,EAAW,UAEbpB,EAAQoB,EAAa,MACrBtB,EAAesB,EAAoB,aACnClB,EAAQkB,EAAc,OACtBhB,EAAUgB,EAAe,QAEzBd,GAAY,GACZI,EAAc,QACdF,GAAc,GACdI,GAAgB,SACjB,2CACF,kBAdc,mCAgBTS,IAAc7B,EAAAA,EAAAA,GAAe8B,EAAAA,IAC7BC,IAAqB/B,EAAAA,EAAAA,GAAegC,EAAAA,IAElCC,IAASC,EAAAA,EAAAA,IAAmBnC,GAA5BkC,MAQRV,EAAAA,EAAAA,YAAU,YACHQ,IAAsBF,IAAoC,qBAArBA,GAAYM,MAA+BN,GAAYO,YAAcf,MAC7GgB,EAAAA,EAAAA,IAAc,qGACd7C,EAAS,6BACT8C,EAAAA,EAAAA,MAEJ,GAAG,CAACT,GAAaE,GAAoBV,KAErC,IAAMkB,GAAY,yCAAG,WAAOC,EAAOtD,GAAY,wFACzCuD,GAAU,EACVC,EAAgBF,EAAEG,OAAOC,MACzBC,EAAc,IAAIC,KAAK,GAAI,IAAI,EAAD,IAChBC,OAAOC,KAAKN,GAAS,yCAAzB,GAAHO,EAAG,MACgD,IAAvD,0BAA0BC,KAAKR,EAASO,GAAK1C,MAAe,gBAAqB,OAAhBkC,GAAU,EAAM,4BACtFI,EAAQH,EAASO,GAAK,sCAEpBR,EAAQ,CAAC,EAAF,cACwB,OAAjCnD,EAAAA,EAAAA,IAAc,oBAAmB,6CAGV6D,EAAAA,EAAAA,KAAyBC,kBAAkBP,GAAO,KAAD,GACjD,GADrBQ,EAAY,OAChBC,QAAQC,IAAIF,GACY,KAArBA,EAAaG,IAAU,iBACU,OAAlClE,EAAAA,EAAAA,IAAc+D,EAAaI,OAAO,2BAIxB,YAATvE,GACDwB,GAAQgD,EAAAA,EAAAA,IAAYL,EAAaG,MACjC1C,GAAY,GACZI,EAAc,UAEdN,GAAU8C,EAAAA,EAAAA,IAAYL,EAAaG,MACnCxC,GAAc,GACdI,GAAgB,SACjB,4CACF,gBA5BiB,wCA8BZuC,GAAgB,SAACnB,EAAOtD,GAChB,YAATA,GACDwB,EAAQ,IACRI,GAAY,GACZI,EAAc,UAEdN,EAAU,IACVI,GAAc,GACdI,GAAgB,QAEpB,EAEMwC,GAAM,yCAAG,2FACK,GAAlBtC,IAAa,GACTrC,EAAS,kBAAmBsB,GAAM,CAAD,mDACjCtB,EAAS,OAAQwB,GAAM,CAAD,mDACtBxB,EAAS,SAAU0B,GAAQ,CAAD,mDAGrB,UAANf,EAAc,iBACT6B,EAAwB,CAAClB,KAAMA,EAAMsD,OAAQtD,EAAMF,YAAaA,EAAaI,KAAMA,EAAME,OAAQA,GACvGT,IAAW4D,EAAAA,EAAAA,IAAc7B,GAAK8B,cAAetC,EAAMvB,EAASH,GAAQ,wBAE0C,OAA1G0B,EAAO,CAACC,IAAK5B,EAAcS,KAAMA,EAAMsD,OAAQtD,EAAMF,YAAaA,EAAaI,KAAMA,EAAME,OAAQA,GAAQ,EAAD,SACvFqD,EAAAA,EAAAA,IAAiBvC,GAAM,KAAD,GAA/B,eAGhBH,IAAa,GAAM,4CACpB,kBAhBW,mCAiBZ,OACE,SAAC2C,EAAA,EAAmB,CAACC,UAAQ,EAACC,WAAS,YACrC,SAAC3F,EAAE4F,QAAO,WACR,4BACE,4BAAQ,yBAGR,UAAC5F,EAAE6F,WAAU,YACX,SAAC7F,EAAEC,KAAI,UAAC,UACR,SAACD,EAAE8F,MAAK,CAACC,UAAW,GAAIpF,MAAOoB,EAAMiE,YAAY,wBAAwBC,SAAU,SAACjC,GAAM,OAAKhC,EAAQgC,EAAEG,OAAOxD,MAAM,EAAEuF,WAAY,SAAClC,GAAK,OAlF7H,SAACA,EAAQG,GAC3BH,EAAES,GAGP,CA8EyJ0B,CAAenC,EAAc,EAAEoC,SAAqB,WAAThF,KAC1L,SAACpB,EAAEC,KAAI,UAAC,iBACR,SAACD,EAAEqG,SAAQ,CAACN,UAAW,IAAMO,WAAS,EAACC,KAAM,EAAGC,GAAG,WAAWR,YAAY,oBAAoBrF,MAAOkB,EAAaoE,SAAU,SAACQ,GAAS,OAAK3E,EAAe2E,EAAMtC,OAAOxD,MAAM,KAC7K,SAACX,EAAEC,KAAI,UAAC,qBACR,SAACD,EAAE0G,KAAI,UAAC,yEACR,UAAC1G,EAAE2G,UAAS,YACV,gBAAKC,IAAc,KAAT3E,EAAY,GAAKA,EAAM4E,IAAI,GAAGC,MAAO,CAACC,MAAO,OAAQC,UAAW,QAASC,OAAQxE,KACzFJ,GAAU,SAAC,MAAkB,CAACmE,GAAG,YAAYM,MAAO,CAACC,MAAO,OAAQE,OAAQ,UAAc,KAC1F5E,GAAU,0BAAM,qBAA0B,KAC1CA,GAAU,UAACrC,EAAEkH,OAAM,CAACV,GAAG,WAAU,WACjC,SAAC,MAAiB,CAACM,MAAO,CAACC,MAAO,OAAQE,OAAQ,OAAQE,aAAc,OAAQC,YAAa,SAAU,gBAEvG,SAACpH,EAAEqH,WAAU,CAACb,GAAG,aAAa7C,KAAK,OAAO5B,KAAK,OAAOkE,SAAU,SAACjC,GAAK,OAAKD,GAAaC,EAAG,WAAW,OAC1F,KACX3B,EAA0G,MAAhG,mBAAQtC,UAAU,YAAYuH,QAAS,SAACtD,GAAK,OAAGmB,GAAcnB,EAAG,WAAW,EAAC,SAAC,eAE7F,SAAChE,EAAEC,KAAI,UAAC,uBACR,SAACD,EAAE0G,KAAI,UAAC,2LACR,UAAC1G,EAAE2G,UAAS,YACV,gBAAKC,IAAe,IAAVzE,EAAa,GAAKA,EAAQ0E,IAAI,GAAGC,MAAO,CAACC,MAAO,OAAQC,UAAW,QAASC,OAAQtE,MAC5FJ,GAAY,SAAC,MAAkB,CAACuE,MAAO,CAACC,MAAO,OAAQE,OAAQ,UAAc,KAC7E1E,GAAY,0BAAM,uBAA4B,KAC9CA,GAAY,UAACvC,EAAEkH,OAAM,CAACV,GAAG,WAAU,WACnC,SAAC,MAAiB,CAACM,MAAO,CAACC,MAAO,OAAQE,OAAQ,OAAQE,aAAc,OAAQC,YAAa,SAAU,gBAEvG,SAACpH,EAAEqH,WAAU,CAAC1D,KAAK,OAAO5B,KAAK,SAASkE,SAAU,SAACjC,GAAK,OAAKD,GAAaC,EAAG,aAAa,OAC9E,KACXzB,EAA8G,MAAlG,mBAAQxC,UAAU,YAAYuH,QAAS,SAACtD,GAAK,OAAGmB,GAAcnB,EAAG,aAAa,EAAC,SAAC,eAEjG,SAAChE,EAAEkH,OAAM,CAACJ,MAAO,CAACC,MAAM,SAAUP,GAAG,QAAQe,QAAS1E,GAAWyE,QAAUlC,GAAQ,SAC1E,UAANhE,EAAgB,SAAW,oBAO1C,CAEA,IAAMpB,EAAI,CACR4F,QAAS1F,EAAAA,GAAAA,IAAU,8nBAER,SAAAC,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAKf,SAAArH,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAG3B,SAAArH,GAAK,OAAIA,EAAMC,MAAMqH,SAASC,MAAM,IAMpC,SAAAvH,GAAK,OAAIA,EAAMC,MAAMqH,SAASE,SAAS,IAO5C,SAAAxH,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IACf,SAAArH,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAK7D3B,WAAY3F,EAAAA,GAAAA,IAAU,6DAGtBD,KAAMC,EAAAA,GAAAA,KAAW,kEACN,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,KAAK,IACpB,SAAAL,GAAK,OAAIA,EAAMC,MAAME,MAAMC,OAAO,IAEnD8G,YAAYnH,EAAAA,EAAAA,IAAO4F,EAAAA,EAAP5F,CAAa,meAaH,SAAAC,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAQlDN,QAAQhH,EAAAA,EAAAA,IAAOgH,EAAAA,GAAPhH,CAAc,4bAGX0H,EAAAA,GAAAA,MAaEA,EAAAA,GAAAA,OAMb9B,OAAO5F,EAAAA,EAAAA,IAAO4F,EAAAA,EAAP5F,CAAa,0NAKT,SAACC,GAAK,OAAGA,EAAMC,MAAMoH,KAAK,EAAI,IACzB,SAACrH,GAAK,OAAGA,EAAMC,MAAMoH,KAAK,EAAI,IACxB,SAAArH,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAElDnB,UAAUnG,EAAAA,EAAAA,IAAOmG,EAAAA,EAAPnG,CAAgB,qPAMb,SAACC,GAAK,OAAGA,EAAMC,MAAMoH,KAAK,EAAI,IACzB,SAACrH,GAAK,OAAGA,EAAMC,MAAMoH,KAAK,EAAI,IACxB,SAAArH,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAGpDd,KAAMxG,EAAAA,GAAAA,IAAU,wFAKhByG,UAAWzG,EAAAA,GAAAA,IAAU,8zBACA,SAAAC,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,IAU3B,SAAArH,GAAK,OAAEA,EAAMC,MAAMoH,KAAK,EAAI,GAOrCI,EAAAA,GAAAA,MAYaA,EAAAA,GAAAA,KACXA,EAAAA,GAAAA,O,0JC3TV,SAASnC,EAAoB,GAA+E,IAA7EoC,EAAQ,EAARA,SAAUC,EAAM,EAANA,OAAQpC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAAWoC,EAAO,EAAPA,QAC3E,GAAkCnG,EAAAA,EAAAA,WAAS,GAAM,eAA1CoG,EAAS,KAAEC,EAAY,KAM9B,OAJAlF,EAAAA,EAAAA,YAAU,gBACMlC,GAAXkH,GAAsBE,GAAa,EACxC,GAAE,KAGA,iCACE,SAAC,IAAM,KACP,SAACjI,EAAEkI,KAAI,CAACJ,SAAUA,EAAQpC,WAAYA,EAAUqC,QAASA,EAASC,UAAWA,EAAU,UACrF,SAAChI,EAAEmI,UAAS,CAACxC,YAAaA,EAAU,SAAEkC,OAExC,SAAC,IAAM,MAGb,CACO,IAAM7H,EAAI,CACfkI,KAAMhI,EAAAA,GAAAA,KAAW,okBAED,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAK,IAKtC,SAAAF,GAAK,OACLA,EAAM2H,SACNM,EAAAA,EAAAA,IAAG,uDACajI,EAAMC,MAAMoH,KAAK,GAChC,IAED,SAAArH,GAAK,OACLiI,EAAAA,EAAAA,IAAG,oDACUjI,EAAMuF,SAAW,EAAIvF,EAAMC,MAAMiI,OAAOC,MAAK,IAE1D,SAAAnI,GAAK,OAAKA,EAAM6H,YAAc7H,EAAM4H,SAAY,gCAAgC,IAE7D,SAAA5H,GAAK,OAAIA,EAAMC,MAAMqH,SAASc,MAAM,IAGpC,SAAApI,GAAK,OAAIA,EAAMC,MAAMqH,SAASC,MAAM,IAE5C,SAAAvH,GAAK,OAAIA,EAAMC,MAAMiI,OAAOC,KAAK,IAC1C,SAAAnI,GAAK,OACLiI,EAAAA,EAAAA,IAAG,yDACUjI,EAAMuF,SAAW,EAAIvF,EAAMC,MAAMiI,OAAOC,MAAK,IAE1D,SAAAnI,GAAK,OAAKA,EAAM6H,YAAc7H,EAAM4H,SAAY,gCAAgC,IAG/D,SAAA5H,GAAK,OAAIA,EAAMC,MAAMqH,SAASe,OAAO,IAC7C,SAAArI,GAAK,OAAIA,EAAMC,MAAMiI,OAAOC,KAAK,IAC1C,SAAAnI,GAAK,OACLiI,EAAAA,EAAAA,IAAG,wDACUjI,EAAMuF,SAAW,EAAIvF,EAAMC,MAAMiI,OAAOC,MAAK,IAE1D,SAAAnI,GAAK,OAAIA,EAAM4H,SAAW,iCAAiC,IAC3D,SAAA5H,GAAK,OAAKA,EAAM6H,YAAc7H,EAAM4H,SAAY,gCAAgC,IAOtFI,UAAWjI,EAAAA,GAAAA,IAAU,0EAGjB,SAAAC,GAAK,OACJA,EAAMwF,YACPyC,EAAAA,EAAAA,IAAG,sDACYjI,EAAMC,MAAMqH,SAASE,UACnC,I,6LCnDMxE,EAAiB,yCAAG,WAAOF,EAAW1B,GAAe,+FACvD,CAACQ,KAAK,GAAIsC,MAAO,GAAIlC,OAAQ,GAAIsG,WAAW,EAAGC,iBAAkB,KAAG,2CAC9E,gBAF6B,wCAOjBlD,EAAgB,yCAAG,WAAOvC,GAAS,0GAE/C,gBAF4B,sCAOhB0F,EAAgB,yCAAG,WAAO1F,GAAS,gGACrC,GAAK,2CACf,gBAF4B,sCAOhBqC,EAAa,yCAAG,WAAOC,EAAuBtC,EAAwB2F,EAAsBrH,GAAe,0GAEvH,gBAFyB,4CAcbsH,EAAoB,WAC7B,MAAO,CACGC,mBAAkB,SACpBC,EACAC,GAED,IAAD,6HAEqB,OAHb,+BAAG,EAEmC,GAC5B,CAAC,EAAC,kBACX,CAAC,CACJxC,GAAI,QACJzE,KAAM,UACN0G,WAAY,EACZtG,OAAQ,SACRF,KAAM,UACR,CACEuE,GAAI,QACJzE,KAAM,UACN0G,WAAY,EACZtG,OAAQ,SACRF,KAAM,UACR,CACEuE,GAAI,QACJzE,KAAM,UACN0G,WAAY,EACZtG,OAAQ,SACRF,KAAM,UACR,CACEuE,GAAI,QACJzE,KAAM,UACN0G,WAAY,EACZtG,OAAQ,SACRF,KAAM,UACR,CACEuE,GAAI,QACJzE,KAAM,UACN0G,WAAY,EACZtG,OAAQ,SACRF,KAAM,UACR,CACEuE,GAAI,QACJzE,KAAM,UACN0G,WAAY,EACZtG,OAAQ,SACRF,KAAM,YACR,0CAvCJ,EAwCF,EAER,C,4HCvFagH,EAAuB,YACrBC,EAAAA,EAAAA,IAAO,CAAEC,KAAM,iBAAkBC,KAAM,KAAMC,SAAU,UAEpE,MAAO,CACCC,gBAAe,SAACrG,EAAMoB,EAAOkF,EAAOC,GAAmC,OAAD,4IAQjE,CACLxE,IAAK,iDACLC,MAAO,KACR,yDAEM,CAAED,IAAK,GAAIC,MAAO,kBAAiB,uDAb8B,EAe5E,EAEJ,EAEaN,EAAyB,WACpC,IAAM8E,GAAOP,EAAAA,EAAAA,IAAO,CAAEC,KAAM,iBAAkBC,KAAM,KAAMC,SAAU,UAEpE,MAAO,CACCzE,kBAAiB,SAACP,GAAmC,OAAD,yIAGrCoF,EAAKC,IAAIrF,GAAO,KAAD,EAAxB,OAAJsF,EAAI,yBACD,CACL3E,IAAK2E,EAAW,KAChB1E,MAAO,KACR,yDAEM,CAAED,IAAK,GAAIC,MAAO,kBAAiB,wDATY,EAW1D,EAEJ,C,mICnEapB,EAAgB,SAAC+F,GAC5BC,EAAAA,GAAAA,QAAgBD,EAClB,EACa9I,EAAgB,SAAC8I,GAC5BC,EAAAA,GAAAA,QAAgBD,EAClB,EACaE,EAAc,SAACF,EAAcG,GACxCF,EAAAA,GAAAA,MAAcD,GACVG,GAEFjF,QAAQG,MAAM8E,EAElB,C","sources":["components/layout/Footer.tsx","services/ValidationService.ts","pages/CreateCollectionPage.tsx","pages/template/DefaultPageTemplate.tsx","services/CollectionService.ts","services/IpfsService.ts","services/NotificationService.ts"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface FooterProps {\r\n  className?: string\r\n}\r\n \r\nexport const Footer: React.FC<FooterProps> = ({ className }: FooterProps) => {\r\n  return (\r\n    <S.Footer className={className}>\r\n      <S.Span>Copyright @2023 CryptoTrades All Rights Reserved</S.Span>\r\n    </S.Footer>\r\n  )\r\n}\r\n\r\nconst S = {\r\n  Footer: styled.footer`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    background: ${props => props.theme.white};\r\n    position: absolute;\r\n  `,\r\n  Span: styled.span`\r\n    font-family: ${props => props.theme.fonts.primary};\r\n    font-weight: 400;\r\n    text-decoration: none;\r\n    font-size: 16px;\r\n    color: ${props => props.theme.black};\r\n    padding: 11px;\r\n  `\r\n}\r\n","import { notifyWarning } from './NotificationService'\r\n\r\nexport const validate = (field: string, value: string) => {\r\n    let w_return = true;\r\n    if(value == undefined || value == ''){\r\n        notifyWarning(field + ' is required')\r\n        w_return = false;\r\n    }\r\n    return w_return;\r\n}\r\n\r\nexport const emailValidate = (email: string) => {\r\n    let w_return = true;\r\n    if (!/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)) { \r\n        notifyWarning('Invalidated Email')\r\n        w_return = false;\r\n     }\r\n    return w_return;\r\n}\r\n\r\nexport const confirmValidate = (password: string, confirm: string) => {\r\n    let w_return = true;\r\n    if(password != confirm){\r\n        notifyWarning('Invalidated Confirm Password')\r\n        w_return = false;\r\n    }        \r\n    return w_return;\r\n}","import { useReactiveVar } from '@apollo/client/react'\nimport { Button, Input } from 'antd'\nimport TextArea from 'antd/es/input/TextArea'\nimport React, { useState, useEffect } from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { colors } from '../styles/variables'\nimport * as IoIcons from 'react-icons/io';\nimport { notifyWarning, notifyError, notifySuccess } from '../services/NotificationService'\nimport {AddCollection} from '../services/CollectionService';\nimport { validate } from '../services/ValidationService';\nimport { safeIpfsUrl } from '../services/UtilService';\nimport { PinataIpfsImageService } from '../services/IpfsService';\n// import {API} from '../constants/api';\nimport { DefaultPageTemplate } from './template/DefaultPageTemplate'\nimport { getChainConfigById } from '../config'\nimport { clearTransaction, transactionLoadingVar, transactionVar } from '../graphql/variables/TransactionVariable'\nimport { accountVar, chainIdVar } from '../graphql/variables/WalletVariable'\nimport { getCollectionInfo, UpdateCollection } from '../services/CollectionService'\n\ninterface Erc721Collection {\n  name: string\n  symbol: string\n  description?: string\n  logo?: string\n  banner?: string\n  address?: string\n}\n\nexport default function CreateCollectionPage() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const mode: any = searchParams.get(\"mode\");\n  const collectionId: any = searchParams.get('collectionId');\n  const chainId = useReactiveVar(chainIdVar)\n  const account = useReactiveVar(accountVar)\n  const [description, setDescription] = useState<string>()\n  const [name, setName] = useState<string>('')\n  const [logo, setLogo] = useState<string>('');\n  const [banner, setBanner] = useState<string>('');\n  const [showLogo, setShowLogo] = useState<boolean>(true);\n  const [showBanner, setShowBanner] = useState<boolean>(true);\n  const [heightLogo, setHeightLogo] = useState<string>('auto');\n  const [heightBanner, setHeightBanner] = useState<string>('auto');\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    if(mode == 'update') init_data();\n  }, [mode])\n\n  const init_data = async () => {\n    let data = {_id: collectionId};\n    let result: any = await getCollectionInfo(data, chainId);\n    if(result){\n      setName(result['name']);\n      setDescription(result['description'])\n      setLogo(result['image'])\n      setBanner(result['banner'])\n\n      setShowLogo(false);\n      setHeightLogo('100%');\n      setShowBanner(false);\n      setHeightBanner('100%');\n    }\n  }\n\n  const transaction = useReactiveVar(transactionVar)\n  const transactionLoading = useReactiveVar(transactionLoadingVar)\n\n  const { mint } = getChainConfigById(chainId)\n\n  const handleKeyPress = (e: any, target: string) => {\n    if(e.key === 'Enter'){\n      //document.getElementById(target).focus();           \n    }\n  }\n \n  useEffect(() => {\n    if (!transactionLoading && transaction && transaction.type === 'createCollection' && transaction.confirmed && !isLoading) {\n      notifySuccess('Collection created successfully! You will be redirected to the myCollection page in a few seconds')\n      navigate(`/collection/mycollection`)\n      clearTransaction()\n    }\n  }, [transaction, transactionLoading, isLoading])\n\n  const onFileChange = async (e:any, field:string) => {    \n    let isImage = true;\n    let imageObj: any = e.target.files;\n    let image: File = new File([], '');\n    for (const key of Object.keys(imageObj)) {\n      if ( /\\.(jpe?g|png|gif|bmp)$/i.test(imageObj[key].name) === false ) { isImage = false; break; }\n      image = imageObj[key];\n    }\n    if(!isImage){\n      notifyWarning('Not image format')\n      return;\n    }\n    let uploadedData = await PinataIpfsImageService().uploadImageToIpfs(image);\n    console.log(uploadedData)\n    if(uploadedData.cid === '') {\n      notifyWarning(uploadedData.error);\n      return;\n    }\n   \n    if(field == 'logo_img'){\n      setLogo(safeIpfsUrl(uploadedData.cid));\n      setShowLogo(false);\n      setHeightLogo('100%');\n    } else {\n      setBanner(safeIpfsUrl(uploadedData.cid));\n      setShowBanner(false);\n      setHeightBanner('100%');\n    }      \n  }\n\n  const onReturnClick = (e:any, field:string) => {\n    if(field == 'logo_img') {\n      setLogo('');\n      setShowLogo(true);\n      setHeightLogo('auto');\n    } else {\n      setBanner('');\n      setShowBanner(true);\n      setHeightBanner('auto');\n    }\n  }\n\n  const submit = async () => {\n    setIsLoading(true)\n    if(!validate('Collection name', name)) return;\n    if(!validate('Logo', logo)) return;\n    if(!validate('Banner', banner)) return;\n\n    \n    if(mode=='create'){\n      const data:Erc721Collection = {name: name, symbol: name, description: description, logo: logo, banner: banner};\n      account && AddCollection(mint.minterAddress, data, account, chainId)\n    } else {\n      let data = {_id: collectionId, name: name, symbol: name, description: description, logo: logo, banner: banner};\n      const w_result = await UpdateCollection(data);\n    }\n    \n    setIsLoading(false)\n  }\n  return (\n    <DefaultPageTemplate noMargin fullWidth>\n      <S.Content>\n        <div>                \n          <header>\n            Add Your Collection\n          </header>\n          <S.subContent>\n            <S.Span>Name</S.Span>\n            <S.Input maxLength={10} value={name} placeholder=\"Enter Collection Name\" onChange={(e: any) => setName(e.target.value)} onKeyPress={(e:any) => handleKeyPress(e, 'Descript')} readOnly = {mode === 'update'} />                  \n            <S.Span>Description</S.Span>\n            <S.TextArea maxLength={1000} showCount rows={2} id='Descript' placeholder=\"Enter Description\" value={description} onChange={(event:any) => setDescription(event.target.value)} />\n            <S.Span>Collection Logo</S.Span>\n            <S.Help>This image will also be used for navigation. 350 x 350 recommended.</S.Help> \n            <S.ImageArea>\n              <img src={logo === ''?'' : logo} alt='' style={{width: '100%', objectFit: 'cover', height: heightLogo }}/>\n              { showLogo? <IoIcons.IoMdImages id='logo_icon' style={{width: '50px', height: '50px'}} /> : null }\n              { showLogo? <span>No Logo Selected</span> : null }  \n              { showLogo? <S.Button id='logo_img'>\n                <IoIcons.IoMdImage style={{width: '20px', height: '20px', marginBottom: '-5px', marginRight: '5px'}} />\n                Select Image\n                <S.ImageInput id='logo_input' type='file' name='logo' onChange={(e:any) => onFileChange(e, 'logo_img')}/>\n              </S.Button> : null }\n              { !showLogo? <button className='returnbtn' onClick={(e:any)=>onReturnClick(e, 'logo_img')}>REMOVE</button> : null }                \n            </S.ImageArea> \n            <S.Span>Collection Banner</S.Span>\n            <S.Help>This image will appear at the top of your collection page. Avoid including too much text in this banner image, as the dimensions change on different devices. 1400 x 400 recommended.</S.Help> \n            <S.ImageArea>\n              <img src={banner == ''?'' : banner} alt='' style={{width: '100%', objectFit: 'cover', height: heightBanner }} />\n              { showBanner? <IoIcons.IoMdImages style={{width: '50px', height: '50px'}} /> : null }\n              { showBanner? <span>No Banner Selected</span> : null }\n              { showBanner? <S.Button id='logo_img'>\n                <IoIcons.IoMdImage style={{width: '20px', height: '20px', marginBottom: '-5px', marginRight: '5px'}} />\n                Select Image\n                <S.ImageInput type='file' name='banner' onChange={(e:any) => onFileChange(e, 'banner_img')}/>\n              </S.Button> : null }\n              { !showBanner? <button className='returnbtn' onClick={(e:any)=>onReturnClick(e, 'banner_img')}>REMOVE</button> : null }\n            </S.ImageArea>\n            <S.Button style={{width:'100px'}} id='login' loading={isLoading} onClick={ submit }>\n              {mode=='create'? 'Create' : 'Update'}\n            </S.Button>  \n          </S.subContent>  \n        </div>          \n      </S.Content>\n    </DefaultPageTemplate>\n  )\n}\n\nconst S = {\n  Content: styled.div`\n    display: flex;\n    color: ${props=>props.theme.gray['4']};\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    div:nth-child(1) {\n      border: 1px solid ${props=>props.theme.gray['1']};\n      border-radius: 5px;\n      line-height: 1.5rem;\n      @media (min-width: ${props => props.theme.viewport.tablet}) {\n        width: 80%;\n        margin-top: 40px;\n        margin-bottom: 40px;\n      }\n\n      @media (min-width: ${props => props.theme.viewport.desktopXl}) {\n        width: 60%;\n        margin-top: 100px;\n        margin-bottom: 100px;\n      }\n      header {\n        height: 40px;\n        background: ${props=>props.theme.gray['0']};\n        border-bottom: 1px solid ${props=>props.theme.gray['1']};\n        padding: 7px 20px;\n      }\n    }\n  `,\n  subContent: styled.div`\n    padding: 10px 20px 20px 20px;\n  `,\n  Span: styled.span`\n    color: ${props => props.theme.black};\n    font-family: ${props => props.theme.fonts.primary};\n  `,    \n  ImageInput: styled(Input)`\n    opacity: 0;\n    position: absolute;\n    width: 150px;\n    height: 30px;\n    right:0px !important;\n    appearance: none;\n    cursor: default;\n    align-items: baseline;\n    color: inherit;\n    text-overflow: ellipsis;\n    white-space: pre;\n    text-align: start !important;  \n    background-color: ${props=>props.theme.gray['0']};\n    margin: 0em;\n    padding: 1px 2px;\n    border-width: 2px;\n    border-style: inset;\n    border: none;\n    border-image: initial;\n  `,\n  Button: styled(Button)`\n    border-radius: 5px;\n    background-color: rgb(34, 106, 237);\n    color: ${colors.white};\n    border: none;\n    box-shadow: none;\n    width: 150px;\n    font-size: 16px;\n    font-weight: bold;\n    height: 40px;\n    padding-bottom: 7px;\n\n    &:hover,\n    &:active,\n    &:focus {\n      background-color: rgb(34, 106, 237);\n      color: ${colors.white};\n      opacity: 0.8;\n      box-shadow: none;\n      border: none;\n    }\n  `,\n  Input: styled(Input)`\n    border-radius: 3px;\n    box-shadow: 1px 1px 5px hsl(0deg 0% 0% / 30%);\n    margin-top: 8px;\n    margin-bottom: 15px;\n    color: ${(props)=>props.theme.gray['4']};\n    background: ${(props)=>props.theme.gray['0']};\n    border: 1px solid ${props=>props.theme.gray['1']};\n  `,\n  TextArea: styled(TextArea)`\n    border-radius: 8px;\n    border: none;\n    margin-bottom: 15px;\n    box-shadow: 1px 1px 5px hsl(0deg 0% 0% / 5%);\n    .ant-input {\n      color: ${(props)=>props.theme.gray['4']};\n      background: ${(props)=>props.theme.gray['0']};\n      border: 1px solid ${props=>props.theme.gray['1']};\n    }\n  `,\n  Help: styled.div`\n    margin-top: 5px;\n    font-size: 12px;\n    color: #999;\n  `,\n  ImageArea: styled.div`\n    border:1px solid ${props=>props.theme.gray['1']};\n    text-align: center; \n    height: 200px; \n    position: relative; \n    display: flex; \n    justify-content: center; \n    flex: 1; \n    margin-bottom:20px;\n    align-items: center; \n    flex-direction: column; \n    background-color: ${props=>props.theme.gray['0']};\n    .returnbtn {\n      position: absolute;\n      top:0;\n      right: 0;\n      border-radius: 5px;\n      background-color:  rgb(34, 106, 237);\n      color: ${colors.white};\n      border: none;\n      box-shadow: none;\n      width: 100px;\n      font-size: 14px;\n      font-weight: bold;\n      height: 30px;\n      padding-bottom: 7px;\n\n      &:hover,\n      &:active,\n      &:focus {\n        background-color: ${colors.red2};\n        color: ${colors.white};\n        opacity: 0.8;\n        box-shadow: none;\n        border: none;\n      }\n    }\n  `\n}\n","import React, { ReactNode, useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Footer } from '../../components/layout/Footer'\nimport  {Header} from '../../components/layout/Header';\n\nexport type DefaultTemplatePageProps = {\n  children: ReactNode\n  bgGray?: boolean\n  noMargin?: boolean\n  fullWidth?: boolean\n  sidebar? : boolean\n}\n\nexport function DefaultPageTemplate({ children, bgGray, noMargin, fullWidth, sidebar }: DefaultTemplatePageProps) {\n  const [isSidebar, setIsSidebar] = useState(false);\n\n  useEffect(()=>{\n    if(sidebar != undefined) setIsSidebar(true);\n  },[])\n\n  return (\n    <>\n      <Header />\n      <S.Main bgGray={!!bgGray} noMargin={!!noMargin} sidebar={sidebar} isSidebar={isSidebar}>\n        <S.Container fullWidth={!!fullWidth}>{children}</S.Container>\n      </S.Main>\n      <Footer />\n    </>\n  )\n}\nexport const S = {\n  Main: styled.main<{ bgGray?: boolean; noMargin: boolean; sidebar?:boolean; isSidebar: boolean; }>`\n    min-height: calc(100vh - 72px);\n    background: ${props => props.theme.white};\n    display: block;\n    align-items: center;\n    padding-top: 100px !important;\n\n    ${props =>\n      props.bgGray &&\n      css`\n        background: ${props.theme.gray[0]};\n      `}\n\n    ${props =>\n      css`\n        padding: ${props.noMargin ? 0 : props.theme.margin.small};\n      `}\n    ${props => (props.isSidebar && !props.sidebar) && 'padding-left: 74px !important;'}\n    \n    @media (min-width: ${props => props.theme.viewport.mobile}) {\n      min-height: calc(100vh - 48.2px);\n    }\n    @media (min-width: ${props => props.theme.viewport.tablet}) {\n      min-height: calc(100vh - 72px);\n      padding: ${props => props.theme.margin.small};\n      ${props =>\n        css`\n          padding: ${props.noMargin ? 0 : props.theme.margin.small}};\n        `}\n      ${props => (props.isSidebar && !props.sidebar) && 'padding-left: 74px !important;'}\n    }\n\n    @media (min-width: ${props => props.theme.viewport.desktop}) {\n      padding: ${props => props.theme.margin.small};\n      ${props =>\n        css`\n          padding: ${props.noMargin ? 0 : props.theme.margin.small};\n        `}\n      ${props => props.sidebar && 'padding-left: 324px !important;'}\n      ${props => (props.isSidebar && !props.sidebar) && 'padding-left: 74px !important;'}\n    }\n\n    .infinite-scroll-component {\n      vertical-align: top !important;\n    }\n  `,\n  Container: styled.div<{ fullWidth?: boolean }>`\n    width: 100%;\n    margin: 0 auto;\n    ${props =>\n      !props.fullWidth &&\n      css`\n        max-width: ${props.theme.viewport.desktopXl};\n      `}\n  `\n}\n","import { AbiItem } from 'web3-utils'\r\nimport erc721MintAbi from '../abi/erc721Mint.json'\r\nimport { clearTransaction, handleTransaction, TransactionType } from '../graphql/variables/TransactionVariable'\r\nimport { initializeWeb3 } from './MultiWalletService'\r\nimport { code } from '../messages'\r\nimport { notifyError, notifyWarning, notifySuccess } from './NotificationService'\r\n// import { API } from '../constants/api';\r\n// import axios from 'axios';\r\n// import Cookies from 'universal-cookie';\r\nimport { MarketplaceCollection } from '../types/MarketplaceTypes'\r\n// import { nftfyNftGraphQlClient } from '../graphql/nftfy/nft/ClientNftfyNftGraphql'\r\n// import { CollectionByNameData, CollectionByNameVar, COLLECTION_BY_NAME_QUERY } from '../graphql/nftfy/nft/collection/collectionByName'\r\n\r\ninterface CollectionService {\r\n    getCollectionItems(\r\n        paginationLimit: number,\r\n        searchName?: string,\r\n        offset?: number\r\n    ): Promise<MarketplaceCollection[]>\r\n}\r\n\r\ninterface Erc721Collection {\r\n    name: string\r\n    symbol: string\r\n    description?: string\r\n    logo?: string\r\n    banner?: string\r\n    address?: string\r\n}\r\n\r\n/*******************************************************************\r\n* this function is to request to server for getting collection info\r\n*******************************************************************/\r\nexport const getCollectionInfo = async (data: any, chainId: number) => {\r\n    return {name:'', image: '', banner: '', item_count:0, contract_address: ''}\r\n}\r\n\r\n/*******************************************************************\r\n* this function is to request to server for updating collection info\r\n*******************************************************************/\r\nexport const UpdateCollection = async (data: any) => {\r\n    \r\n}\r\n\r\n/*******************************************************************\r\n* this function is to request to server for deleting a collection\r\n*******************************************************************/\r\nexport const deleteCollection = async (data: any) => {\r\n    return false;    \r\n}\r\n\r\n/*******************************************************************\r\n* this function is to request to server for adding collection info\r\n*******************************************************************/\r\nexport const AddCollection = async (minterAddress: string, data: Erc721Collection, ownerAddress: string, chainId: number) => {\r\n    \r\n}\r\n\r\n/*******************************************************************\r\n* this function is to request to server for uploading logo and banner\r\n*******************************************************************/\r\nexport const imageUpload = async (data: any, field:string) => {\r\n   \r\n}\r\n\r\n/*******************************************************************\r\n* this function is to request to server for getting collection list\r\n*******************************************************************/\r\nexport const collectionService = () : CollectionService => {\r\n    return {\r\n        async getCollectionItems(\r\n            paginationLimit,\r\n            searchName: string,\r\n            offset = 0\r\n        ) {\r\n            const result_data:MarketplaceCollection[] = [];\r\n            let cond_data = {};\r\n            return [{\r\n                id: \"coll1\",\r\n                name: \"member1\",\r\n                item_count: 3,\r\n                banner: \"string\",\r\n                logo: \"string\"\r\n            },{\r\n                id: \"coll2\",\r\n                name: \"member2\",\r\n                item_count: 6,\r\n                banner: \"string\",\r\n                logo: \"string\"\r\n            },{\r\n                id: \"coll3\",\r\n                name: \"member2\",\r\n                item_count: 6,\r\n                banner: \"string\",\r\n                logo: \"string\"\r\n            },{\r\n                id: \"coll4\",\r\n                name: \"member2\",\r\n                item_count: 6,\r\n                banner: \"string\",\r\n                logo: \"string\"\r\n            },{\r\n                id: \"coll5\",\r\n                name: \"member2\",\r\n                item_count: 6,\r\n                banner: \"string\",\r\n                logo: \"string\"\r\n            },{\r\n                id: \"coll6\",\r\n                name: \"member2\",\r\n                item_count: 6,\r\n                banner: \"string\",\r\n                logo: \"string\"\r\n            }]\r\n        }\r\n    }\r\n} \r\n","import { Erc721Attribute, Erc721Properties } from '../types/UtilTypes'\nimport { create } from 'ipfs-http-client'\n\ninterface Erc721Metadata {\n  name: string\n  author: string\n  image?: string\n  animation_url?: string\n  alt?: string\n  sensitive_content: string\n  description?: string\n  social_media?: string\n  attributes?: Erc721Attribute[]\n  properties: Erc721Properties\n}\n\nexport interface IpfsFileResponse {\n  cid: string\n  error: string\n}\n\ninterface IpfsNFTService {\n  uploadNFTToIpfs(data: Erc721Metadata, image?: File, video?: File, audio?: File): Promise<IpfsFileResponse>\n}\n\ninterface IpfsImageService {\n  uploadImageToIpfs(image: File): Promise<IpfsFileResponse>\n}\n\nexport const PinataIpfsNFTService = (): IpfsNFTService => {\n  const ipfs = create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n  return {\n    async uploadNFTToIpfs(data, image, video, audio): Promise<IpfsFileResponse> {   \n      \n      try {\n        // let w_imageIpfs = await ipfs.add(image);\n        // data.image = w_imageIpfs['path'];\n        // const nftMetadataFile = JSON.stringify(data);\n        // const _cid = await ipfs.add(nftMetadataFile);\n\n        return {\n          cid: 'QmSppX72tE98tQ7xUEbeNqehDhVqZ67u2AEKnsUkJEWpBb',//_cid['path']\n          error: ''\n        }\n      } catch(e) {\n        return { cid: '', error: 'upload failed' };\n      }\n    }\n  }\n}\n\nexport const PinataIpfsImageService = (): IpfsImageService => {\n  const ipfs = create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n  return {\n    async uploadImageToIpfs(image): Promise<IpfsFileResponse> {   \n      \n      try {\n        let _cid = await ipfs.add(image);\n        return {\n          cid: _cid['path'],\n          error: ''\n        }\n      } catch(e) {\n        return { cid: '', error: 'upload failed' };\n      }\n    }\n  }\n}\n","import { message } from 'antd'\n\nexport const notifySuccess = (text: string) => {\n  message.success(text)\n}\nexport const notifyWarning = (text: string) => {\n  message.warning(text)\n}\nexport const notifyError = (text: string, err?: Error) => {\n  message.error(text)\n  if (err) {\n    // eslint-disable-next-line no-console\n    console.error(err)\n  }\n}\n"],"names":["Footer","className","S","Span","styled","props","theme","white","fonts","primary","black","validate","field","value","w_return","undefined","notifyWarning","CreateCollectionPage","navigate","useNavigate","useSearchParams","searchParams","mode","get","collectionId","chainId","useReactiveVar","chainIdVar","account","accountVar","useState","description","setDescription","name","setName","logo","setLogo","banner","setBanner","showLogo","setShowLogo","showBanner","setShowBanner","heightLogo","setHeightLogo","heightBanner","setHeightBanner","isLoading","setIsLoading","useEffect","init_data","data","_id","getCollectionInfo","result","transaction","transactionVar","transactionLoading","transactionLoadingVar","mint","getChainConfigById","type","confirmed","notifySuccess","clearTransaction","onFileChange","e","isImage","imageObj","target","files","image","File","Object","keys","key","test","PinataIpfsImageService","uploadImageToIpfs","uploadedData","console","log","cid","error","safeIpfsUrl","onReturnClick","submit","symbol","AddCollection","minterAddress","UpdateCollection","DefaultPageTemplate","noMargin","fullWidth","Content","subContent","Input","maxLength","placeholder","onChange","onKeyPress","handleKeyPress","readOnly","TextArea","showCount","rows","id","event","Help","ImageArea","src","alt","style","width","objectFit","height","Button","marginBottom","marginRight","ImageInput","onClick","loading","gray","viewport","tablet","desktopXl","colors","children","bgGray","sidebar","isSidebar","setIsSidebar","Main","Container","css","margin","small","mobile","desktop","item_count","contract_address","deleteCollection","ownerAddress","collectionService","getCollectionItems","paginationLimit","searchName","PinataIpfsNFTService","create","host","port","protocol","uploadNFTToIpfs","video","audio","ipfs","add","_cid","text","message","notifyError","err"],"sourceRoot":""}